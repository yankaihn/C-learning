/*函数的指针*/
/*指针变量也可以指向一个函数。一个函数在编译时被分配一个入口地址。这个函数入口地址就成为函数的指针
可以用一个指针变量指向函数，然后通过该指针变量调用此函数。*/

#include<iostream>
using namespace std;

int main() 
{
	int max(int x, int y);
	int x,y,m;
	int(*p)(int , int );	//括号不能省略，加括号定义为函数指针，不加括号就变为了声明一个函数，函数的返回值是指针类型；
	p = max;				//将函数入口的指针赋给函数变量指针 p;
	cout << "Please input your number: " << endl;
	cin >> x >> y;
	m = p(x, y);
	cout << "max=" << m << endl;
	return 0;
}
int max(int x, int y) 
{
	int k;
	if (x < y) 
	{
		k = x;
		x = y;
		y = k;
	}
	return x;
}
//指针数组
/*指针数组*/
//如果一个数组，其元素均为指针类型数据，该数组称为指针数组，也就是说指针数组的每一个元素相当于一个指针变量，它的值都是地址。
//一维数组的定义形式为：
// 类型名 *数组名 [ ];  注在此声明中[]的优先级比*高所以数组名先与[]结合，再与*结合；
//*表示此数组是指针类型的，每个数组元素都可指向一个整形变量；
//注意：int （*p）[666] 是指向一维数组的指针变量；
