今天编写了一个程序，主程序调用函数A时，需要函数A返回三个值，想到的解决方法有三种：
1.将需要的值封装在一个新定义的结构体中，让函数A返回的数据类型为结构体类型。
2.将需要返回的数值定义为全局变量。（当程序较大时不建议使用）
3.使用指针，简单粗暴的一种行之有效的方法。
EX:输入一个 3X4 的矩阵，找出最大的值，并列出最大值所在的行和列；（调用查找大小函数时需要返回最大值，行，列三个数值，用第一种方法实现）
C++代码如下：
#include<iostream>
#include<iomanip>
using namespace std;

int num[3][4];

typedef struct 
{
	int data;
	int row;
	int colum;
} Max;

void Input_fun(void);
void Output_fun(void);
Max max_fun(void);


int main()
{
	Max max;
	 max.data = num[0][0];
	Input_fun();
	Output_fun();
	max = max_fun();
	cout << "max= " << max.data << " " << "row=" << max.row << " " << "colum=" << max.colum;
	cout << "\n" << endl;
	return 0;
}
void Input_fun(void) 
{
	int i, j;
	cout << "Please type numbers:" << endl;
	for (i = 0; i < 3; i++)
	{	
		for (j = 0; j < 4; j++)
		{
			cin >> num[i][j];
			//			cout <<setw(5)<<num[i][j]<<' ';
		}
		//		cout << '\n' << endl;
	}
}
void Output_fun(void) 
{
	int i, j;

	cout << "The array you typed is :" << '\n';
	for (i = 0; i < 3; i++)
	{
		for (j = 0; j < 4; j++)
		{
			cout << setw(5) << num[i][j] << ' ';
		}
		cout << '\n' << endl;
	}
}
Max max_fun(void) 
{
	/*struct Max 
	{
		int data;
		int row;
		int colum;
	} max;*/
	Max max;
	int i, j;
	max.data = num[0][0];
	for (i = 0; i < 3; i++)
	{
		for (j = 0; j < 4; j++)
		{
			if (num[i][j] > max.data )
			{
				max.data = num[i][j];
				max.row = i;
				max.colum = j;
			}
		}
	}
	return max;
}
